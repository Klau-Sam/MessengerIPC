Informacje pomiedzy komponentami projektu przesylane sa za pomoca czterech struktur:

1. user - sluzy do przekazywania informacji o chcacym skorzystac z komunikatora kliencie, a takze o wszystkich klientach nalezacych do bazy danych; przechowuje login uzytkownika, jego haslo, status (czy jest zalogowany, czy nie), indywidualny klucz do komunikacji, odpowiedz od serwera o stanie realizacji niektorych zadan oraz skrotowa informacje o przynaleznosci do grup,

2. info - sluzy do szybkiej i tresciwej komunikacji pomiedzy serwerem a klientem, najczesciej sluzy serwerowi do wysylania odpowiedzi na zadanie (1 - sukces, 0 - niepowodzenie), ale takze do przekazania przez klienta jednej waznej informacji w kluczu,

3. group - przechowuje wszystkie informacje o istniejacych trzech grupach, tj. licznosc grupy, loginy uzytkownikow, ktorzy do poszczegolnych grup naleza oraz indywidualne, identyfikujace ich klucze,

4. messenger - za pomoca tej struktury nastepuje komunikacja wlasciwa, to znaczy przekazywanie wiadomosci tekstowych pomiedzy uzytkownikami; struktura ta zawiera wiec takie pola jak: od kogo nadchodzi wiadomosc, do kogo ma zostac przekazana (uzytkownik/grupa) oraz tresc tej wiadomosci.

Kazda z powyszych struktur zawiera takze informacje o typie przesylanego komunikatu, ktora jest kluczowa przy komunikacji za pomoca kolejek komunikatow oraz umozliwia danej kolejce zidentyfikowanie komunikatow przeznaczonych tylko dla niej. W moim programie wystepuja trzy glowne kolejki do komunikacji - do kadzej z nich jest przypisany wiecej niz jeden typ, poniewaz wybrana kolejka obsluguje kilka roznych funkcji. Do kazdej funkcji przynalezy wiec jeden unikatowy typ, ktorym poslugujemy sie przy odbiorze komunikatu o zadaniu realizowanym przez dana funkcje i jeden do odeslania komunikatu zwrotnego.

Pierwsza z glownych kolejek (o kluczu req1) odpowiada za komuniakty-zadania zwiazane tylko z logowaniem (przynaleza do niej typy: LOGIN_REQ, LOGIN_RES, LOGOUT_REQ, LOGOUT_RES, LOG_USERS_REQ, LOG_USERS_RES, GROUP_REQ, GROUP_RES), druga (req2) - z obsluga grup (typy: ADD_GR_REQ, ADD_GR_RES, DEL_GR_REQ, DEL_GR_RES), a trzecia (req3) za przesylanie wiadomosci tekstowych pomiedzy uzytkownikami (typy: MES_USER_REQ, MES_USER_RES, MES_GR_REQ, MES_GR_RES). Ponadto istnieje takze dziewiec innych kolejek, ktore odpowiedzialne sa wylacznie za przekazywanie wiadomosci do konkretnego adresata sposrod dziewieciu w bazie danych od grupy/innego uzytkownika (do kazdej z tych kolejek przypisany jest typ INFO_ABOUT_MESS). Kazdy z uzytkownikow moze byc wiec identyfikowany nie tylko za pomoca loginu czy hasla, ale takze unikalnego klucza, ktory nastepnie przeklada sie na klucz unikalnej kolejki (res + key) do odczytu zaadresowanych do danego uzytkownika wiadomosci tekstowych.
